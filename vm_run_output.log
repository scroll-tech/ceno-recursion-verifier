   Compiling cfg-if v1.0.0
   Compiling either v1.15.0
   Compiling proc-macro2 v1.0.94
   Compiling serde v1.0.219
   Compiling libc v0.2.171
   Compiling zerocopy v0.8.24
   Compiling once_cell v1.21.3
   Compiling num-traits v0.2.19
   Compiling pin-project-lite v0.2.16
   Compiling crossbeam-utils v0.8.21
   Compiling strength_reduce v0.2.4
   Compiling tracing-core v0.1.33
   Compiling paste v1.0.15
   Compiling itertools v0.14.0
   Compiling getrandom v0.2.15
   Compiling crossbeam-epoch v0.9.18
   Compiling quote v1.0.40
   Compiling rand_core v0.6.4
   Compiling syn v2.0.100
   Compiling crossbeam-deque v0.8.6
   Compiling num-integer v0.1.46
   Compiling syn v1.0.109
   Compiling rayon-core v1.12.1
   Compiling subtle v2.6.1
   Compiling version_check v0.9.5
   Compiling transpose v0.2.3
   Compiling itertools v0.13.0
   Compiling typenum v1.18.0
   Compiling generic-array v0.14.7
   Compiling rayon v1.10.0
   Compiling gcd v2.3.0
   Compiling radium v0.7.0
   Compiling shlex v1.3.0
   Compiling spin v0.9.8
   Compiling lazy_static v1.5.0
   Compiling cc v1.2.17
   Compiling tap v1.0.1
   Compiling arrayvec v0.7.6
   Compiling wyz v0.5.1
   Compiling ppv-lite86 v0.2.21
   Compiling funty v2.0.0
   Compiling crunchy v0.2.3
   Compiling rand_chacha v0.3.1
   Compiling byteorder v1.5.0
   Compiling rand v0.8.5
   Compiling bitvec v1.0.1
   Compiling static_assertions v1.1.0
   Compiling num-bigint v0.3.3
   Compiling memchr v2.7.4
   Compiling num-bigint v0.4.6
   Compiling cpufeatures v0.2.17
   Compiling thiserror v1.0.69
   Compiling constant_time_eq v0.3.1
   Compiling arrayref v0.3.9
   Compiling allocator-api2 v0.2.21
   Compiling heck v0.5.0
   Compiling forward_ref v1.0.0
   Compiling tiny-keccak v2.0.2
   Compiling p3-maybe-rayon v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling hashbrown v0.15.2
   Compiling p3-maybe-rayon v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling p3-maybe-rayon v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling const-random-macro v0.1.16
   Compiling blake2b_simd v1.0.3
   Compiling ahash v0.8.11
   Compiling itoa v1.0.15
   Compiling const-random v0.1.18
   Compiling log v0.4.27
   Compiling ryu v1.0.20
   Compiling zerocopy v0.7.35
   Compiling keccak v0.1.5
   Compiling serde_json v1.0.140
   Compiling addchain v0.2.0
   Compiling equivalent v1.0.2
   Compiling rustversion v1.0.20
   Compiling bytemuck v1.22.0
   Compiling regex-syntax v0.8.5
   Compiling rustc-hash v2.1.1
   Compiling itertools v0.10.5
   Compiling blake3 v1.8.0
   Compiling memuse v0.2.2
   Compiling smallvec v1.14.0
   Compiling regex-syntax v0.6.29
   Compiling object v0.36.7
   Compiling ff v0.12.1
   Compiling group v0.12.1
   Compiling overload v0.1.1
   Compiling nu-ansi-term v0.46.0
   Compiling indexmap v2.8.0
   Compiling tracing-log v0.2.0
   Compiling sharded-slab v0.1.7
   Compiling thread_local v1.1.8
   Compiling ff_derive v0.13.1
   Compiling unroll v0.1.5
   Compiling derivative v2.2.0
   Compiling serde_derive v1.0.219
   Compiling tracing-attributes v0.1.28
   Compiling thiserror-impl v1.0.69
   Compiling zeroize_derive v1.4.2
   Compiling zeroize v1.8.1
   Compiling regex-automata v0.4.9
   Compiling ff v0.13.1
   Compiling group v0.13.0
   Compiling tracing v0.1.41
   Compiling strum_macros v0.26.4
   Compiling derive-new v0.7.0
   Compiling pairing v0.23.0
   Compiling bitcode_derive v0.6.5
   Compiling derive-new v0.6.0
   Compiling gimli v0.31.1
   Compiling regex-automata v0.1.10
   Compiling halo2curves v0.8.0
   Compiling adler2 v2.0.0
   Compiling miniz_oxide v0.8.5
   Compiling halo2derive v0.1.0
   Compiling matchers v0.1.0
   Compiling pairing v0.22.0
   Compiling nibble_vec v0.1.0
   Compiling tikv-jemalloc-sys v0.6.0+5.3.0-1-ge13ca993e8ccb9ba9847cc330696e02839f328f7
   Compiling regex v1.11.1
   Compiling rustc-demangle v0.1.24
   Compiling strum v0.26.3
   Compiling tracing-subscriber v0.3.19
   Compiling unicode-xid v0.2.6
   Compiling endian-type v0.1.2
   Compiling derive_more-impl v1.0.0
   Compiling radix_trie v0.2.1
   Compiling bls12_381 v0.7.1
   Compiling addr2line v0.24.2
   Compiling ark-ff-asm v0.4.2
   Compiling ark-ff-macros v0.4.2
   Compiling metrics v0.23.0
   Compiling ordered-float v4.6.0
   Compiling proc-macro-error-attr2 v2.0.0
   Compiling quanta v0.12.5
   Compiling num_cpus v1.16.0
   Compiling winnow v0.7.4
   Compiling ansi_term v0.12.1
   Compiling sketches-ddsketch v0.2.2
   Compiling eyre v0.6.12
   Compiling aho-corasick v1.1.3
   Compiling downcast-rs v1.2.1
   Compiling tracing-forest v0.1.6
   Compiling derive_more v1.0.0
   Compiling proc-macro-error2 v2.0.1
   Compiling jubjub v0.9.0
   Compiling libmimalloc-sys v0.1.40
   Compiling indenter v0.3.3
   Compiling convert_case v0.4.0
   Compiling lockfree-object-pool v0.1.6
   Compiling derive_more v0.99.19
   Compiling p3-util v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling hex v0.4.3
   Compiling crypto-common v0.1.6
   Compiling block-buffer v0.10.4
   Compiling digest v0.10.7
   Compiling p3-util v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling pasta_curves v0.5.1
   Compiling sha2 v0.10.8
   Compiling sha3 v0.10.8
   Compiling serde_arrays v0.1.0
   Compiling blake2 v0.10.6
   Compiling hashbrown v0.14.5
   Compiling p3-util v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling bitcode v0.6.6
   Compiling nums v0.1.0
   Compiling ark-std v0.4.0
   Compiling p3-field v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-field v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-field v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling pasta_curves v0.4.1
   Compiling ark-serialize v0.4.2
   Compiling ark-std v0.5.0
   Compiling p3-symmetric v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-matrix v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-symmetric v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-matrix v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-symmetric v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling p3-matrix v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling halo2_proofs v0.1.0
   Compiling p3-dft v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-dft v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-challenger v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling serde_spanned v0.6.8
   Compiling toml_datetime v0.6.8
   Compiling backtrace v0.3.74
   Compiling p3-commit v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling toml_edit v0.22.24
   Compiling p3-dft v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling p3-challenger v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling ark-ff v0.4.2
   Compiling metrics-util v0.17.0
   Compiling p3-mds v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling metrics-tracing-context v0.16.0
   Compiling p3-commit v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-mds v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-air v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling getset v0.1.5
   Compiling enum-ordinalize-derive v4.3.1
   Compiling halo2 v0.1.0-beta.2
   Compiling toml v0.8.20
   Compiling elf v0.7.4
   Compiling enum-ordinalize v4.3.0
   Compiling p3-mds v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-air v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling ark-serialize-derive v0.5.0
   Compiling crossbeam-channel v0.5.14
   Compiling mimalloc v0.1.44
   Compiling educe v0.6.0
   Compiling p3-uni-stark v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling ark-serialize v0.5.0
   Compiling p3-poseidon2 v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-poseidon2 v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling rrs-lib v0.1.0
   Compiling ark-ff-macros v0.5.0
   Compiling async-trait v0.1.88
   Compiling ark-ff-asm v0.5.0
   Compiling itertools v0.11.0
   Compiling p3-uni-stark v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-poseidon2 v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling utf8parse v0.2.2
   Compiling anstyle-parse v0.2.6
   Compiling openvm-stark-backend v1.0.0-rc.0 (https://github.com/openvm-org/stark-backend.git?tag=v1.0.0-rc.0#18cf1c08)
   Compiling openvm-stark-backend v1.0.0 (https://github.com/openvm-org/stark-backend.git?tag=v1.0.0#884f8e6a)
   Compiling p3-monty-31 v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling p3-poseidon v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling serde-big-array v0.5.1
   Compiling ark-ff v0.5.0
   Compiling enum_dispatch v0.3.13
   Compiling colorchoice v1.0.3
   Compiling halo2curves-axiom v0.7.0
   Compiling anstyle-query v1.1.2
   Compiling anstyle v1.0.10
   Compiling is_terminal_polyfill v1.70.1
   Compiling anstream v0.6.18
   Compiling p3-goldilocks v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling p3-baby-bear v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling p3-challenger v0.1.0 (https://github.com/scroll-tech/plonky3?rev=8d2be81#8d2be81c)
   Compiling crossbeam-queue v0.3.12
   Compiling strsim v0.11.1
   Compiling clap_lex v0.7.4
   Compiling zkhash v0.2.0 (https://github.com/HorizenLabs/poseidon2.git?rev=bb476b9#bb476b9c)
   Compiling clap_builder v4.5.34
   Compiling crossbeam v0.8.4
   Compiling p3 v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling p3-monty-31 v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-poseidon v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-interpolation v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling openvm-custom-insn v0.1.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling clap_derive v4.5.32
   Compiling openvm-custom-insn v0.1.0 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling stability v0.2.1
   Compiling openvm-instructions-derive v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling test-case-core v3.3.1
   Compiling maybe-rayon v0.1.1
   Compiling rand_xorshift v0.3.0
   Compiling rustc-hash v1.1.0
   Compiling poseidon-primitives v0.2.0
   Compiling clap v4.5.34
   Compiling test-case-macros v3.3.1
   Compiling openvm-instructions v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-platform v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-rv32im-guest v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling p3-baby-bear v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-fri v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-goldilocks v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-monty-31 v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-bn254-fr v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-poseidon v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-merkle-tree v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-interpolation v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-blake3 v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-keccak v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-util v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling openvm-instructions-derive v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling ptr_meta_derive v0.3.0
   Compiling openvm-circuit-primitives-derive v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling half v2.5.0
   Compiling p3-maybe-rayon v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling plotters-backend v0.3.7
   Compiling ark-poly v0.5.0
   Compiling ciborium-io v0.2.2
   Compiling openvm-circuit-primitives v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling ciborium-ll v0.2.2
   Compiling plotters-svg v0.3.7
   Compiling p3-field v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling ptr_meta v0.3.0
   Compiling openvm-instructions v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling ark-ec v0.5.0
   Compiling openvm-stark-sdk v1.0.0-rc.0 (https://github.com/openvm-org/stark-backend.git?tag=v1.0.0-rc.0#18cf1c08)
   Compiling p3-fri v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-goldilocks v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-baby-bear v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling openvm-platform v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling test-case v3.3.1
   Compiling ff_ext v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling p3-bn254-fr v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-merkle-tree v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-keccak v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-blake3 v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling bincode v1.3.3
   Compiling tracing-subscriber v0.2.25
   Compiling is-terminal v0.4.16
   Compiling same-file v1.0.6
   Compiling halo2-axiom v0.5.0
   Compiling halo2curves v0.1.0
   Compiling winnow v0.5.40
   Compiling anyhow v1.0.97
   Compiling cast v0.3.0
   Compiling criterion-plot v0.5.0
   Compiling ark-relations v0.5.1
   Compiling walkdir v2.5.0
   Compiling openvm-stark-sdk v1.0.0 (https://github.com/openvm-org/stark-backend.git?tag=v1.0.0#884f8e6a)
   Compiling rancor v0.1.0
   Compiling plotters v0.3.7
   Compiling toml_edit v0.19.15
   Compiling ciborium v0.2.2
   Compiling openvm-transpiler v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-rv32im-guest v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling tinytemplate v1.2.1
   Compiling halo2-base v0.5.0 (https://github.com/axiom-crypto/halo2-lib.git?tag=v0.5.0-git#2d4b70b8)
   Compiling bytecheck_derive v0.8.1
   Compiling openvm-circuit-derive v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-circuit-primitives-derive v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling secp256k1-sys v0.10.1
   Compiling colored v2.2.0
   Compiling simdutf8 v0.1.5
   Compiling oorandom v11.1.5
   Compiling anes v0.1.6
   Compiling bytecheck v0.8.1
   Compiling criterion v0.5.1
   Compiling ark-std v0.3.0
   Compiling openvm-circuit-primitives v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling halo2-ecc v0.5.0 (https://github.com/axiom-crypto/halo2-lib.git?tag=v0.5.0-git#2d4b70b8)
   Compiling openvm-rv32im-transpiler v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling proc-macro-crate v1.3.1
   Compiling snark-verifier v0.2.0 (https://github.com/axiom-crypto/snark-verifier?branch=zkvm-v0.1#9e1c165f)
   Compiling ark-snark v0.5.1
   Compiling nimue v0.2.0 (https://github.com/arkworks-rs/nimue?rev=3a83250#3a83250d)
   Compiling openvm-transpiler v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling p3-matrix v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling num-rational v0.4.2
   Compiling uint v0.9.5
   Compiling num-complex v0.4.6
   Compiling inout v0.1.4
   Compiling merlin v3.0.0
   Compiling ark-crypto-primitives-macros v0.5.0
   Compiling munge_macro v0.4.3
   Compiling openvm-circuit-derive v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling fixed-hash v0.7.0
   Compiling num-iter v0.1.45
   Compiling itertools v0.12.1
   Compiling num v0.4.3
   Compiling primitive-types v0.10.1
   Compiling munge v0.4.3
   Compiling ark-crypto-primitives v0.5.0
   Compiling cipher v0.4.4
   Compiling goldilocks v0.1.0 (https://github.com/scroll-tech/ceno-Goldilocks#29a15d18)
   Compiling p3-dft v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling openvm-rv32im-transpiler v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling nimue-pow v0.1.0 (https://github.com/arkworks-rs/nimue?rev=3a83250#3a83250d)
   Compiling poseidon v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling num_enum_derive v0.5.11
   Compiling rend v0.5.2
   Compiling ark-test-curves v0.5.0
   Compiling multilinear_extensions v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling p3-symmetric v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling openvm-native-compiler-derive v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling rkyv_derive v0.8.10
   Compiling dirs-sys-next v0.1.2
   Compiling rustix v1.0.3
   Compiling ceno_rt v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling plonky2_util v0.2.0
   Compiling getrandom v0.3.2
   Compiling plonky2_field v0.2.2
   Compiling dirs-next v2.0.0
   Compiling num_enum v0.5.11
   Compiling p3-mds v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling transcript v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling secp256k1 v0.30.0
   Compiling keccak-hash v0.8.0
   Compiling openvm-native-compiler-derive v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling plonky2_maybe_rayon v0.2.0
   Compiling csv-core v0.1.12
   Compiling errno v0.3.10
   Compiling bitflags v2.9.0
   Compiling rustc-hex v2.1.0
   Compiling web-time v1.1.0
   Compiling base16ct v0.2.0
   Compiling glob v0.3.2
   Compiling secp v0.4.1
   Compiling ceno_zkvm v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling plonky2 v0.2.2
   Compiling substrate-bn v0.6.0
   Compiling csv v1.3.1
   Compiling whir v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling rrs-succinct v0.1.0
   Compiling sumcheck_macro v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling term v0.7.0
   Compiling witness v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling ctr v0.9.2
   Compiling aes v0.8.4
   Compiling num-derive v0.4.2
   Compiling encode_unicode v1.0.0
   Compiling unicode-width v0.1.14
   Compiling fastrand v2.3.0
   Compiling prettytable-rs v0.10.0
   Compiling rkyv v0.8.10
   Compiling tempfile v3.19.1
   Compiling sumcheck v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling p3-poseidon v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling p3-poseidon2 v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling generic_static v0.2.0
   Compiling parse-size v1.1.0
   Compiling base64 v0.22.1
   Compiling p3-goldilocks v0.1.0 (https://github.com/scroll-tech/plonky3?rev=1ba4e5c#1ba4e5c4)
   Compiling openvm v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling ceno_emul v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling mpcs v0.1.0 (https://github.com/darth-cy/ceno.git?branch=feat%2Fexport_ff_ext#fc98ed39)
   Compiling tikv-jemallocator v0.6.0
   Compiling p3-poseidon2-air v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=b0591e9#b0591e9b)
   Compiling p3-poseidon2-air v0.1.0 (https://github.com/Plonky3/Plonky3.git?rev=1ba4e5c#1ba4e5c4)
   Compiling openvm-poseidon2-air v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling openvm-poseidon2-air v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-circuit v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling openvm-circuit v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-rv32im-circuit v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-native-compiler v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling openvm-rv32im-circuit v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling openvm-native-circuit v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling openvm-native-recursion v1.0.1-rc.0 (https://github.com/darth-cy/openvm?branch=build%2Fceno_recursion#0f94c8a3)
   Compiling snark-verifier-sdk v0.2.0 (https://github.com/axiom-crypto/snark-verifier?branch=zkvm-v0.1#9e1c165f)
   Compiling openvm-native-compiler v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-native-circuit v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling openvm-native-recursion v1.0.0-rc.1 (https://github.com/openvm-org/openvm.git?tag=v1.0.0-rc.1#30576cc6)
   Compiling whir v0.1.0 (https://github.com/scroll-tech/whir.git?branch=feat%2Fopenvm-binding#395943db)
   Compiling ceno-recursion-verifier v0.1.0 (/Users/raygao/Desktop/ceno-recursion-verifier)
warning: unused imports: `Point` and `TowerVerifierInput`
 --> src/json/parser.rs:2:56
  |
2 | use crate::tower_verifier::binding::{IOPProverMessage, Point, TowerVerifierInput, F};
  |                                                        ^^^^^  ^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `ZKVMProof` and `verifier`
 --> src/json/parser.rs:6:25
  |
6 | use ceno_zkvm::scheme::{verifier, ZKVMProof};
  |                         ^^^^^^^^  ^^^^^^^^^

warning: unused import: `openvm::io::println`
 --> src/json/parser.rs:8:5
  |
8 | use openvm::io::println;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SystemConfig`, `VmExecutor`, and `instructions::program::Program`
 --> src/json/parser.rs:9:28
  |
9 | use openvm_circuit::arch::{instructions::program::Program, SystemConfig, VmExecutor};
  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^

warning: unused imports: `NativeConfig` and `Native`
  --> src/json/parser.rs:10:29
   |
10 | use openvm_native_circuit::{Native, NativeConfig};
   |                             ^^^^^^  ^^^^^^^^^^^^

warning: unused imports: `AsmBuilder` and `AsmConfig`
  --> src/json/parser.rs:11:35
   |
11 | use openvm_native_compiler::asm::{AsmBuilder, AsmConfig};
   |                                   ^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `openvm_native_recursion::challenger::FeltChallenger`
  --> src/json/parser.rs:14:5
   |
14 | use openvm_native_recursion::challenger::FeltChallenger;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CanObserveVariable`, `CanSampleVariable`, `duplex::DuplexChallengerVariable`, `fri::witness`, `hints::Hintable`, and `types::InnerConfig`
  --> src/json/parser.rs:16:18
   |
16 |     challenger::{duplex::DuplexChallengerVariable, CanObserveVariable, CanSampleVariable},
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^
17 |     fri::witness,
   |     ^^^^^^^^^^^^
18 |     hints::Hintable,
   |     ^^^^^^^^^^^^^^^
19 |     types::InnerConfig,
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `default_engine`
  --> src/json/parser.rs:23:35
   |
23 |     config::baby_bear_poseidon2::{default_engine, BabyBearPoseidon2Config},
   |                                   ^^^^^^^^^^^^^^

warning: unused imports: `FieldAlgebra`, `FieldExtensionAlgebra`, `PrimeField32`, `PrimeField64`, and `extension::BinomialExtensionField`
  --> src/json/parser.rs:27:5
   |
27 |     extension::BinomialExtensionField, FieldAlgebra, FieldExtensionAlgebra, PrimeField32,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^
28 |     PrimeField64,
   |     ^^^^^^^^^^^^

warning: unused import: `p3_util::array_serialization::deserialize`
  --> src/json/parser.rs:30:5
   |
30 | use p3_util::array_serialization::deserialize;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
  --> src/json/parser.rs:31:13
   |
31 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `default`
  --> src/json/parser.rs:34:11
   |
34 | use std::{default, fs::File};
   |           ^^^^^^^

warning: unused imports: `SystemConfig` and `VmExecutor`
 --> src/tests/mod.rs:6:60
  |
6 | use openvm_circuit::arch::{instructions::program::Program, SystemConfig, VmExecutor};
  |                                                            ^^^^^^^^^^^^  ^^^^^^^^^^

warning: unused imports: `NativeConfig` and `Native`
 --> src/tests/mod.rs:7:29
  |
7 | use openvm_native_circuit::{Native, NativeConfig};
  |                             ^^^^^^  ^^^^^^^^^^^^

warning: unused import: `Felt`
 --> src/tower_verifier/binding.rs:3:34
  |
3 |     ir::{Array, Builder, Config, Felt},
  |                                  ^^^^

warning: unused imports: `InnerChallenge` and `InnerVal`
 --> src/tower_verifier/binding.rs:9:23
  |
9 |     hints::{Hintable, InnerChallenge, InnerVal, VecAutoHintable},
  |                       ^^^^^^^^^^^^^^  ^^^^^^^^

warning: unused imports: `Poseidon2BabyBear` and `config::baby_bear_poseidon2::BabyBearPoseidon2Config`
  --> src/tower_verifier/binding.rs:16:5
   |
16 |     config::baby_bear_poseidon2::BabyBearPoseidon2Config,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
17 |     p3_baby_bear::{BabyBear, Poseidon2BabyBear},
   |                              ^^^^^^^^^^^^^^^^^

warning: unused imports: `IOPProverMessage`, `Point`, and `TowerVerifierInput`
 --> src/tower_verifier/program.rs:2:5
  |
2 |     IOPProverMessage, IOPProverMessageVariable, Point, PointAndEvalVariable, PointVariable,
  |     ^^^^^^^^^^^^^^^^                            ^^^^^
3 |     TowerVerifierInput, TowerVerifierInputVariable,
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::tower_verifier`
 --> src/tower_verifier/program.rs:9:5
  |
9 | use crate::tower_verifier;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `BigInteger` and `PrimeField`
  --> src/tower_verifier/program.rs:11:29
   |
11 | use ark_ff::{AdditiveGroup, BigInteger, Field, PrimeField};
   |                             ^^^^^^^^^^         ^^^^^^^^^^

warning: unused import: `ark_std::collections::BTreeSet`
  --> src/tower_verifier/program.rs:13:5
   |
13 | use ark_std::collections::BTreeSet;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ceno_zkvm::structs::PointAndEval`
  --> src/tower_verifier/program.rs:14:5
   |
14 | use ceno_zkvm::structs::PointAndEval;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `mpcs::BasefoldCommitment`
  --> src/tower_verifier/program.rs:15:5
   |
15 | use mpcs::BasefoldCommitment;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `openvm::io::println`
  --> src/tower_verifier/program.rs:16:5
   |
16 | use openvm::io::println;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `ir::MemVariable`
  --> src/tower_verifier/program.rs:18:46
   |
18 | use openvm_native_compiler::{asm::AsmConfig, ir::MemVariable};
   |                                              ^^^^^^^^^^^^^^^

warning: unused imports: `Hintable` and `VecAutoHintable`
  --> src/tower_verifier/program.rs:22:13
   |
22 |     hints::{Hintable, InnerChallenge, InnerVal, VecAutoHintable},
   |             ^^^^^^^^                            ^^^^^^^^^^^^^^^

warning: unused imports: `p3_baby_bear::BabyBear` and `p3_blake3::Blake3`
  --> src/tower_verifier/program.rs:24:24
   |
24 | use openvm_stark_sdk::{p3_baby_bear::BabyBear, p3_blake3::Blake3};
   |                        ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^

warning: unused import: `p3_field::PrimeField32`
  --> src/tower_verifier/program.rs:25:5
   |
25 | use p3_field::PrimeField32;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ExtensionField`, `FieldExtensionAlgebra`, `PackedValue`, and `TwoAdicField`
  --> src/tower_verifier/program.rs:27:5
   |
27 |     ExtensionField, Field as Plonky3Field, FieldAlgebra, FieldExtensionAlgebra, PackedValue,
   |     ^^^^^^^^^^^^^^                                       ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^
28 |     TwoAdicField,
   |     ^^^^^^^^^^^^

warning: unused imports: `Blake3Digest`, `BlakeDigestVariable`, `MultilinearPoint`, `StatementVariable`, `WhirProofRoundVariable`, `WhirProofVariable`, `WhirProof`, `eq_poly_outside`, `fields::Field64`, `fs_utils::DigestReader`, `parameters::WhirConfig`, `self as merkle_tree`, and `sumcheck::proof::SumcheckPolynomial`
  --> src/tower_verifier/program.rs:32:9
   |
32 |         fields::Field64,
   |         ^^^^^^^^^^^^^^^
33 |         merkle_tree::blake3::{self as merkle_tree, Blake3Digest},
   |                               ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^
34 |     },
35 |     poly_utils::{eq_poly_outside, MultilinearPoint},
   |                  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^
36 |     sumcheck::proof::SumcheckPolynomial,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
37 |     whir::{
38 |         fs_utils::DigestReader,
   |         ^^^^^^^^^^^^^^^^^^^^^^
39 |         parameters::WhirConfig,
   |         ^^^^^^^^^^^^^^^^^^^^^^
40 |         vm_binding::{
41 |             BlakeDigestVariable, StatementVariable, WhirProofRoundVariable, WhirProofVariable,
   |             ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^
42 |         },
43 |         WhirProof,
   |         ^^^^^^^^^

warning: unused import: `Point`
   --> src/tower_verifier/program.rs:630:60
    |
630 |     use crate::tower_verifier::binding::{IOPProverMessage, Point, TowerVerifierInput, F};
    |                                                            ^^^^^

warning: unused imports: `ZKVMProof` and `verifier`
   --> src/tower_verifier/program.rs:632:29
    |
632 |     use ceno_zkvm::scheme::{verifier, ZKVMProof};
    |                             ^^^^^^^^  ^^^^^^^^^

warning: unused import: `openvm::io::println`
   --> src/tower_verifier/program.rs:634:9
    |
634 |     use openvm::io::println;
    |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `AsmConfig`
   --> src/tower_verifier/program.rs:637:51
    |
637 |     use openvm_native_compiler::asm::{AsmBuilder, AsmConfig};
    |                                                   ^^^^^^^^^

warning: unused imports: `CanSampleVariable`, `fri::witness`, and `types::InnerConfig`
   --> src/tower_verifier/program.rs:642:76
    |
642 |         challenger::{duplex::DuplexChallengerVariable, CanObserveVariable, CanSampleVariable},
    |                                                                            ^^^^^^^^^^^^^^^^^
643 |         fri::witness,
    |         ^^^^^^^^^^^^
644 |         hints::Hintable,
645 |         types::InnerConfig,
    |         ^^^^^^^^^^^^^^^^^^

warning: unused imports: `FieldExtensionAlgebra`, `PrimeField32`, `PrimeField64`, and `extension::BinomialExtensionField`
   --> src/tower_verifier/program.rs:653:9
    |
653 |         extension::BinomialExtensionField, FieldAlgebra, FieldExtensionAlgebra, PrimeField32,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^
654 |         PrimeField64,
    |         ^^^^^^^^^^^^

warning: unused import: `p3_util::array_serialization::deserialize`
   --> src/tower_verifier/program.rs:656:9
    |
656 |     use p3_util::array_serialization::deserialize;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
   --> src/tower_verifier/program.rs:657:17
    |
657 |     use serde::{Deserialize, Serialize};
    |                 ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `default`
   --> src/tower_verifier/program.rs:660:15
    |
660 |     use std::{default, fs::File};
    |               ^^^^^^^

warning: unused import: `openvm_native_compiler::asm::AsmConfig`
 --> src/transcript/mod.rs:2:5
  |
2 | use openvm_native_compiler::asm::AsmConfig;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Hintable`, `InnerChallenge`, `InnerVal`, and `VecAutoHintable`
 --> src/transcript/mod.rs:6:13
  |
6 |     hints::{Hintable, InnerChallenge, InnerVal, VecAutoHintable},
  |             ^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^  ^^^^^^^^^^^^^^^

warning: unused import: `p3_field::ExtensionField`
 --> src/transcript/mod.rs:8:5
  |
8 | use p3_field::ExtensionField;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `Field as Plonky3Field`, `FieldExtensionAlgebra`, `PackedValue`, and `TwoAdicField`
  --> src/transcript/mod.rs:10:5
   |
10 |     Field as Plonky3Field, FieldAlgebra, FieldExtensionAlgebra, PackedValue, TwoAdicField,
   |     ^^^^^^^^^^^^^^^^^^^^^                ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused imports: `BasefoldRSParams` and `Basefold`
 --> src/zkvm_verifier/binding.rs:3:12
  |
3 | use mpcs::{Basefold, BasefoldCommitment, BasefoldRSParams};
  |            ^^^^^^^^                      ^^^^^^^^^^^^^^^^

warning: unused import: `FieldExtensionAlgebra`
  --> src/zkvm_verifier/binding.rs:12:65
   |
12 | use p3_field::{extension::BinomialExtensionField, FieldAlgebra, FieldExtensionAlgebra};
   |                                                                 ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `PointAndEvalVariable`, `Point`, and `json::parser::parse_zkvm_proof_json`
  --> src/zkvm_verifier/verifier.rs:10:5
   |
10 |     json::parser::parse_zkvm_proof_json,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
11 |     tower_verifier::{
12 |         binding::{Point, PointAndEvalVariable, PointVariable, TowerVerifierInputVariable},
   |                   ^^^^^  ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `error` and `structs::PointAndEval`
  --> src/zkvm_verifier/verifier.rs:16:17
   |
16 | use ceno_zkvm::{error, structs::PointAndEval};
   |                 ^^^^^  ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ir::MemVariable`
  --> src/zkvm_verifier/verifier.rs:18:46
   |
18 | use openvm_native_compiler::{asm::AsmConfig, ir::MemVariable};
   |                                              ^^^^^^^^^^^^^^^

warning: unused imports: `FieldExtensionAlgebra` and `dot_product`
  --> src/zkvm_verifier/verifier.rs:26:16
   |
26 | use p3_field::{dot_product, FieldAlgebra, FieldExtensionAlgebra};
   |                ^^^^^^^^^^^                ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `openvm_native_recursion::challenger::ChallengerVariable`
  --> src/json/parser.rs:13:5
   |
13 | use openvm_native_recursion::challenger::ChallengerVariable;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `openvm_native_compiler::prelude`
  --> src/json/parser.rs:12:5
   |
12 | use openvm_native_compiler::prelude::*;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ChallengerVariable`
  --> src/zkvm_verifier/verifier.rs:22:63
   |
22 |         duplex::DuplexChallengerVariable, CanObserveVariable, ChallengerVariable, FeltChallenger,
   |                                                               ^^^^^^^^^^^^^^^^^^

warning: unused import: `challenger::ChallengerVariable`
 --> src/tower_verifier/binding.rs:8:5
  |
8 |     challenger::ChallengerVariable,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Field`
  --> src/tower_verifier/program.rs:11:41
   |
11 | use ark_ff::{AdditiveGroup, BigInteger, Field, PrimeField};
   |                                         ^^^^^

warning: unused import: `AdditiveGroup`
  --> src/tower_verifier/program.rs:11:14
   |
11 | use ark_ff::{AdditiveGroup, BigInteger, Field, PrimeField};
   |              ^^^^^^^^^^^^^

warning: unused import: `ark_poly::domain::EvaluationDomain`
  --> src/tower_verifier/program.rs:12:5
   |
12 | use ark_poly::domain::EvaluationDomain;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Field`
  --> src/tower_verifier/program.rs:27:21
   |
27 |     ExtensionField, Field as Plonky3Field, FieldAlgebra, FieldExtensionAlgebra, PackedValue,
   |                     ^^^^^

warning: unused import: `openvm_native_recursion::challenger::ChallengerVariable`
   --> src/tower_verifier/program.rs:639:9
    |
639 |     use openvm_native_recursion::challenger::ChallengerVariable;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `challenger`
   --> src/arithmetics/mod.rs:215:5
    |
215 |     challenger: &mut impl ChallengerVariable<C>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_challenger`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `max_idx`
   --> src/arithmetics/mod.rs:216:5
    |
216 |     max_idx: Usize<C::N>,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_max_idx`

warning: variable does not need to be mutable
   --> src/arithmetics/mod.rs:313:9
    |
313 |     let mut evals_len: Felt<C::F> = builder.constant(C::F::ONE);
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/json/parser.rs:352:13
    |
352 |         let mut has_same_r_sumcheck_proofs: usize = 0;
    |             ----^^^^^^^^^^^^^^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> src/json/parser.rs:353:13
    |
353 |         let mut same_r_sumcheck_proofs: Vec<IOPProverMessage> = vec![];
    |             ----^^^^^^^^^^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `engine`
  --> src/tests/mod.rs:28:9
   |
28 |     let engine = default_engine();
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `program`
  --> src/tests/mod.rs:55:10
   |
55 |     let (program, witness) = build_zkvm_proof_verifier_test();
   |          ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_program`

warning: unused variable: `witness`
  --> src/tests/mod.rs:55:19
   |
55 |     let (program, witness) = build_zkvm_proof_verifier_test();
   |                   ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_witness`

warning: unused variable: `one`
   --> src/tower_verifier/program.rs:397:9
    |
397 |     let one: Ext<<C as Config>::F, <C as Config>::EF> = builder.constant(C::EF::ONE);
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_one`

warning: variable does not need to be mutable
   --> src/tower_verifier/program.rs:393:9
    |
393 |     let mut curr_pt = initial_rt.clone();
    |         ----^^^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/tower_verifier/program.rs:394:9
    |
394 |     let mut curr_eval = initial_claim.clone();
    |         ----^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `opcode_idx`
   --> src/tower_verifier/program.rs:757:13
    |
757 |         let opcode_idx: usize = 0;
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_opcode_idx`

warning: unused variable: `challenger`
    --> src/tower_verifier/program.rs:1014:17
     |
1014 |         let mut challenger = Challenger::new(perm.clone());
     |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_challenger`

warning: variable does not need to be mutable
    --> src/tower_verifier/program.rs:1014:13
     |
1014 |         let mut challenger = Challenger::new(perm.clone());
     |             ----^^^^^^^^^^
     |             |
     |             help: remove this `mut`

warning: unused variable: `one`
  --> src/zkvm_verifier/verifier.rs:39:9
   |
39 |     let one: Ext<C::F, C::EF> = builder.constant(C::EF::ONE);
   |         ^^^ help: if this is intentional, prefix it with an underscore: `_one`

warning: unused variable: `zero`
  --> src/zkvm_verifier/verifier.rs:40:9
   |
40 |     let zero: Ext<C::F, C::EF> = builder.constant(C::EF::ZERO);
   |         ^^^^ help: if this is intentional, prefix it with an underscore: `_zero`

warning: unused variable: `digest_width`
  --> src/zkvm_verifier/verifier.rs:64:9
   |
64 |     let digest_width: RVar<C::N> = RVar::from(DIGEST_WIDTH);
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_digest_width`

warning: unused variable: `dummy_table_item_multiplicity`
   --> src/zkvm_verifier/verifier.rs:106:9
    |
106 |     let dummy_table_item_multiplicity: RVar<C::N> = RVar::from(0);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_dummy_table_item_multiplicity`

warning: unused variable: `eval`
  --> src/zkvm_verifier/verifier.rs:56:17
   |
56 |             let eval = builder.iter_ptr_get(&zkvm_proof_input.pi_evals, ptr_vec[1]);
   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_eval`

warning: unused variable: `raw0`
  --> src/zkvm_verifier/verifier.rs:57:17
   |
57 |             let raw0 = builder.get(&raw, 0);
   |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_raw0`

warning: unused variable: `zero`
   --> src/zkvm_verifier/verifier.rs:235:9
    |
235 |     let zero: Ext<C::F, C::EF> = builder.constant(C::EF::ZERO);
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_zero`

warning: unused variable: `logup_p_eval`
   --> src/zkvm_verifier/verifier.rs:318:9
    |
318 |     let logup_p_eval = builder.get(&logup_p_evals, 0).eval;
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_logup_p_eval`

warning: unused variable: `circuit_vk`
   --> src/zkvm_verifier/verifier.rs:228:5
    |
228 |     circuit_vk: Array<C, Felt<C::F>>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_circuit_vk`

warning: unused variable: `pi_evals`
   --> src/zkvm_verifier/verifier.rs:230:5
    |
230 |     pi_evals: &Array<C, Ext<C::F, C::EF>>,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_pi_evals`

warning: unused variable: `beta`
   --> src/zkvm_verifier/verifier.rs:232:5
    |
232 |     beta: Ext<C::F, C::EF>,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_beta`

warning: unused variable: `is_skip_same_point_sumcheck`
   --> src/zkvm_verifier/verifier.rs:548:9
    |
548 |     let is_skip_same_point_sumcheck: Usize<C::N> = Usize::from(1);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_skip_same_point_sumcheck`

warning: unused variable: `tower_proof`
   --> src/zkvm_verifier/verifier.rs:549:9
    |
549 |     let tower_proof = &table_proof.tower_proof;
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tower_proof`

warning: unused variable: `builder`
   --> src/zkvm_verifier/verifier.rs:523:5
    |
523 |     builder: &mut Builder<C>,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_builder`

warning: unused variable: `challenger`
   --> src/zkvm_verifier/verifier.rs:524:5
    |
524 |     challenger: &mut DuplexChallengerVariable<C>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_challenger`

warning: unused variable: `circuit_vk`
   --> src/zkvm_verifier/verifier.rs:525:5
    |
525 |     circuit_vk: Array<C, Felt<C::F>>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_circuit_vk`

warning: unused variable: `raw_pi`
   --> src/zkvm_verifier/verifier.rs:527:5
    |
527 |     raw_pi: &Array<C, Array<C, Felt<C::F>>>,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_raw_pi`

warning: unused variable: `pi_evals`
   --> src/zkvm_verifier/verifier.rs:528:5
    |
528 |     pi_evals: &Array<C, Ext<C::F, C::EF>>,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_pi_evals`

warning: type `ZKVMProofInput` is more private than the item `parse_zkvm_proof_json`
   --> src/json/parser.rs:127:1
    |
127 | pub fn parse_zkvm_proof_json() -> ZKVMProofInput {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `parse_zkvm_proof_json` is reachable at visibility `pub`
    |
note: but type `ZKVMProofInput` is only usable at visibility `pub(crate)`
   --> src/zkvm_verifier/binding.rs:84:1
    |
84  | pub(crate) struct ZKVMProofInput {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: `#[warn(private_interfaces)]` on by default

warning: type alias `InnerConfig` is never used
  --> src/arithmetics/mod.rs:10:6
   |
10 | type InnerConfig = AsmConfig<InnerVal, InnerChallenge>;
   |      ^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `NUM_FANIN` is never used
  --> src/arithmetics/mod.rs:11:7
   |
11 | const NUM_FANIN: usize = 2;
   |       ^^^^^^^^^

warning: constant `MAX_DEGREE` is never used
  --> src/arithmetics/mod.rs:12:7
   |
12 | const MAX_DEGREE: usize = 3;
   |       ^^^^^^^^^^

warning: function `reverse_idx_arr` is never used
  --> src/arithmetics/mod.rs:94:8
   |
94 | pub fn reverse_idx_arr<C: Config>(
   |        ^^^^^^^^^^^^^^^

warning: type alias `SC` is never used
  --> src/json/parser.rs:36:6
   |
36 | type SC = BabyBearPoseidon2Config;
   |      ^^

warning: type alias `EF` is never used
  --> src/json/parser.rs:37:6
   |
37 | type EF = <SC as StarkGenericConfig>::Challenge;
   |      ^^

warning: type alias `Challenger` is never used
  --> src/json/parser.rs:38:6
   |
38 | type Challenger = <SC as StarkGenericConfig>::Challenger;
   |      ^^^^^^^^^^

warning: type alias `B` is never used
  --> src/json/parser.rs:43:6
   |
43 | type B = BabyBear;
   |      ^

warning: type alias `Pcs` is never used
  --> src/json/parser.rs:44:6
   |
44 | type Pcs = Basefold<E, BasefoldRSParams>;
   |      ^^^

warning: function `read_json` is never used
  --> src/json/parser.rs:46:4
   |
46 | fn read_json() -> Value {
   |    ^^^^^^^^^

warning: function `print_structure` is never used
  --> src/json/parser.rs:53:4
   |
53 | fn print_structure(value: &Value, indent: usize) {
   |    ^^^^^^^^^^^^^^^

warning: struct `ZKVMProofJSONParsed` is never constructed
   --> src/json/parser.rs:104:19
    |
104 | pub(crate) struct ZKVMProofJSONParsed {
    |                   ^^^^^^^^^^^^^^^^^^^
    |
    = note: `ZKVMProofJSONParsed` has a derived impl for the trait `Default`, but this is intentionally ignored during dead code analysis

warning: type alias `Challenger` is never used
  --> src/tests/mod.rs:18:6
   |
18 | type Challenger = <SC as StarkGenericConfig>::Challenger;
   |      ^^^^^^^^^^

warning: type alias `B` is never used
  --> src/tests/mod.rs:22:6
   |
22 | type B = BabyBear;
   |      ^

warning: type alias `Pcs` is never used
  --> src/tests/mod.rs:23:6
   |
23 | type Pcs = Basefold<E, BasefoldRSParams>;
   |      ^^^

warning: field `max_num_variables` is never read
   --> src/tower_verifier/binding.rs:106:9
    |
96  | pub struct TowerVerifierInput {
    |            ------------------ field in this struct
...
106 |     pub max_num_variables: usize,
    |         ^^^^^^^^^^^^^^^^^

warning: type alias `InnerConfig` is never used
  --> src/tower_verifier/program.rs:46:6
   |
46 | type InnerConfig = AsmConfig<InnerVal, InnerChallenge>;
   |      ^^^^^^^^^^^

warning: constant `NUM_FANIN` is never used
  --> src/tower_verifier/program.rs:47:7
   |
47 | const NUM_FANIN: usize = 2;
   |       ^^^^^^^^^

warning: constant `MAX_DEGREE` is never used
  --> src/tower_verifier/program.rs:48:7
   |
48 | const MAX_DEGREE: usize = 3;
   |       ^^^^^^^^^^

warning: type alias `B` is never used
   --> src/tower_verifier/program.rs:670:10
    |
670 |     type B = BabyBear;
    |          ^

warning: type alias `Pcs` is never used
   --> src/tower_verifier/program.rs:671:10
    |
671 |     type Pcs = Basefold<E, BasefoldRSParams>;
    |          ^^^

warning: function `read_json` is never used
   --> src/tower_verifier/program.rs:673:8
    |
673 |     fn read_json() -> Value {
    |        ^^^^^^^^^

warning: function `print_structure` is never used
   --> src/tower_verifier/program.rs:680:8
    |
680 |     fn print_structure(value: &Value, indent: usize) {
    |        ^^^^^^^^^^^^^^^

warning: type alias `InnerConfig` is never used
  --> src/zkvm_verifier/verifier.rs:28:6
   |
28 | type InnerConfig = AsmConfig<InnerVal, InnerChallenge>;
   |      ^^^^^^^^^^^

warning: constant `MAX_DEGREE` is never used
  --> src/zkvm_verifier/verifier.rs:30:7
   |
30 | const MAX_DEGREE: usize = 3;
   |       ^^^^^^^^^^

warning: unused `Result` that must be used
  --> src/json/parser.rs:49:5
   |
49 |     file.read_to_string(&mut contents);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
49 |     let _ = file.read_to_string(&mut contents);
   |     +++++++

warning: unused `Result` that must be used
   --> src/tower_verifier/program.rs:676:9
    |
676 |         file.read_to_string(&mut contents);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
676 |         let _ = file.read_to_string(&mut contents);
    |         +++++++

warning: unused `Result` that must be used
   --> src/tower_verifier/program.rs:762:9
    |
762 |         file.read_to_string(&mut contents);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
762 |         let _ = file.read_to_string(&mut contents);
    |         +++++++

warning: unused `Result` that must be used
   --> src/tower_verifier/program.rs:962:9
    |
962 |         vk_file.read_to_string(&mut vk_contents);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
    |
962 |         let _ = vk_file.read_to_string(&mut vk_contents);
    |         +++++++

warning: `ceno-recursion-verifier` (lib test) generated 121 warnings (run `cargo fix --lib -p ceno-recursion-verifier --tests` to apply 56 suggestions)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 1m 37s
     Running unittests src/lib.rs (target/debug/deps/ceno_recursion_verifier-3715084d19026cdc)

running 1 test
test tests::test_zkvm_proof_verifier ... ok

successes:

successes:
    tests::test_zkvm_proof_verifier

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in 5.63s

